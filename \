require 'rails_helper'

RSpec.describe "Recipes API" do
  let! (:user) { create(:brewmaster, :user, :with_recipes) }
  let! (:recipe) { user.recipes.sample }

  context "authorized" do
    let! (:auth_header) {  { 'Authorization' => "Token token=#{user.auth_token}" } }

    it "should send a list of recipes" do
      all_recipes = Recipe.all

      get v1_recipes_path, {}, auth_header

      json = JSON.parse(response.body)

      expect(response).to be_success
      expect(json['recipes'].length).to eq(all_recipes.length)
    end

    it "shows recipe " do
      get v1_recipe_path(recipe.id), {}, auth_header

      expect(response).to be_success
      expect(response.body).to eq(RecipeSerializer.new(recipe).to_json)
    end

    it "creates new recipe" do
      new_recipe = FactoryGirl.attributes_for(:recipe)
      post v1_recipess_path, { "recipe" => recipe.as_json }, auth_header
      expect(response).to be_success
      expect(response.body).to eq(UserSerializer.new(User.last).to_json)
    end

    it "updates user" do
      user = users.sample
      put v1_user_path(user.id), { user: { name: "newusername" } }, auth_header
      expect(response).to be_success
      expect(response.body).to eq(UserSerializer.new(User.find(user.id)).to_json)
    end

    it "destroys user" do
      user = users.sample
      delete v1_user_path(user.id), {}, auth_header
      expect(response).to be_success
      expect(response.body).to eq({ message: "User successfuly deleted." }.to_json)
    end
  end

end
